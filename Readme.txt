This is the package of Re-analysing Pipeline for Parkes Pulsar Survey (RPPPS) and other pulsar data.
Codes and scripts come from Zhichen Pan (panzc@bao.ac.cn) and Lei Qian.

INSTALLATION
1, I suppose that you have installed gcc-c++, so just running compile.bash
with BASH or SH, like
bash compile.bash
OR
./compile.bash
There should be no errors.

2, Editing the initial file for your shell, such as .bashrc or .cshrc;
For .bashrc, add this line
export RPPPS_DIR=/xxxx/xxxx
while /xxxx/xxxx is where this package located.
for example, I use
export RPPPS_DIR=/home/pzc/pulsars/scripts

3, Of course you need fully installed dependences, such as PRESTO, dspsr, psrchive etc. 

As a reminder, after setting the path, please lunch the terminal again to apply the changes.

Descriptions for files

ACCEL_sift.py (from PRESTO package)
--- Modified ACCEL_sift.py in PRESTO package. You need to change some settings!
Dependences: fully installed PRESTO, all python routines should also be compiled.

CandCheck.py (Zhichen Pan)
--- The python code to check candidates with known pulsar database in psrcat.
Dependences: psrcat

compile.bash (Zhichen Pan)
--- Shell script to compile all the C++ source codes

CpCand.cpp (Zhichen Pan)
--- Source file for creating scripts to copy all folding results from each folders

cut_FASTpsrfits_freq_time_splitpol.py (Lei Qian)
--- Python code to cut FAST psrfits in time (in units of subints) and frequency (in units of channels). Output files are tow from each polarization and one from combining.

FAST_cut_onefile.bash (Zhichen Pan)
--- Shell script to call cut_FASTpsrfits_freq_time_splitpol.py to cut one FAST raw psrfits file into beams.
Dependences: cut_FASTpsrfits_freq_time_splitpol.py

filterbank_cut.cpp (Zhichen Pan)
--- Source file for cutting one filterbank data into beams. ONLY filterbank data files from SigProc are available (due to the different file header).

fitsio_cut_deRFI_input.py (Lei qian)
--- Cut RFI channels in one psrfits file, RFI channels are in one txt file (output of fitsio_dspec_listRFI.py).

fitsio_cut_freq_time.py (Lei qian)
--- Cut one psrfits file by time and frequency (channels), using fisio instead of pyfits.

fitsio_dspec.py (Lei qian)
--- Create the spectrum from on psrfits file.

fitsio_dspec_listRFI.py (Lei qian)
--- List the RFIs in one spectrum (output of fisio_dspec.py).

folding_single_file.bash
--- Folding one single file with many many DM-period pairs (and with acceleration).
Dependences: PRESTO

gather_cands.bash (Zhichen Pan)
--- Get all the candidates from one output file of PRESTO routine accelsearch and write into one txt time.

heimdall_FRBsearch_0.1.bash and heimdall_FRBsearch_0.1_psrfits.bash (Zhichen Pan)
--- Single pulse search scripts for filterbank file and psrfits file. Heimdall is used.
Dependences: heimdall (and nVIDIA GPU card)

knownPSR.dat (from psrcat, in different format)
--- Known pulsar datafile from psrcat, will not be the newest one. 

makeDDlist_para_2.cpp and makeDDlist_para_3.cpp (Zhichen Pan)
--- Source file for creating scritps to parallel dedisperion, FFT and acceleration search. The difference between these two code is that the code generated by makeDDlist_para_2.cpp will run the trials one round by one round, and the one from makeDDlist_para_3.cpp will keep checking the process number and start new processes when some trials finished. In default, the RPPPS package use makeDDlist_para_3.cpp. 

pfd-export_1.py (Chen Wang)
--- Output time-phase data from one pfd file.

pfd-export_2.py (Chen Wang)
--- Output time-phase data and chi-2 to DM data from one pfd file.

prepfold_end.bash (Zhichen Pan)
--- Script to check if prepfold has finished.

pyfis_cut_deRFI_input.py (Lei Qian)
pyfits_dspec_listRFI.py (Lei Qian)

Readme.txt
--- This file.

read_pfd.cpp (Zhichen Pan)
--- Extract header information from one pfd file.

RPPPS_fold.presto (Zhichen Pan)
--- Folding script for pulsar search.
Dependences: PRESTO, cpCand.cpp (and compiled), prepfold_end.bash, CandCheck.py

RPPPS_rfifind.presto (Zhichen Pan)
--- RFI checking script for pulsar search.
Dependences: PRESTO

RPPPS_search.presto (Zhichen Pan)
--- Searching script.
Dependences: PRESTO, makeDDlist_para_3.cpp or makeDDlist_para_2.cpp (and compiled)

RPPPS_sift.presto (Zhichen Pan)
--- Acceleration search candidate sifting script.
Dependences: ACCEL_sift.py

RPPPS_start.presto (Zhichen Pan)
--- The script to start a full search (RFI checking, searching, sifting, and folding candidates).
Dependences: RPPPS_fold.presto, RPPPS_rfifind.presto, RPPPS_search.presto, RPPPS_sift.presto

show-csv.py (Chen Wang)

SinglePulseCheck.bash (Zhichen Pan)
--- Creating the raw data image and dedispersed time series plots for each single pulse candidates from heimdall search
Dependences: psrchive, dspsr

For help information, please run the codes without input parameters.

Good luck!

Pzc

